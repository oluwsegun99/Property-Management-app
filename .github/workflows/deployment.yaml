name:   Home-Crescent Backend CI/CD
on:
  push:
    branches:
      - testing

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Create .env file
        run: |
          echo DATABASE_URL="${{secrets.DATABASE_URL}}" >> .env
          echo ACCESS_SECRET="${{secrets.ACCESS_SECRET}}" >> .env
          echo REFRESH_SECRET="${{secrets.REFRESH_SECRET}}" >> .env
          echo TYPESENSE_HOST="${{secrets.TYPESENSE_HOST}}" >> .env
          echo TYPESENSE_ADMIN_API_KEY="${{secrets.TYPESENSE_ADMIN_API_KEY}}" >> .env
          echo TYPESENSE_SEARCH_API_KEY="${{secrets.TYPESENSE_SEARCH_API_KEY}}" >> .env
          echo TYPESENSE_PROTOCOL="${{secrets.TYPESENSE_PROTOCOL}}" >> .env

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Create a file
        run: |
          touch keypass
          echo "${{ secrets.SSH_PRIVATE_KEY }}" >> keypass
          chmod 600 keypass

      - name: Deploy to Droplet
        env:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USERNAME }}
        run: |
            scp -o StrictHostKeyChecking=no -i keypass -r $GITHUB_WORKSPACE/dist $username@$host:/root
      
      - name: SSH into DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Commands to run on the remote server
            sudo apt-get update
            sudo apt-get install -y git
            sudo apt-get install -y nodejs
            sudo apt install nginx -y
            # sudo ufw allow OpenSSH
            # sudo ufw allow "Nginx Full"
            # sudo ufw --force enable
            sudo apt-get install -y npm
            npm install --global yarn pm2
            sudo rm -rf homecrescent-backend/dist
            sudo mv /root/dist /root/homecrescent-backend/
            cd homecrescent-backend
            sudo rm -rf .env
            sudo touch .env
            sudo chmod 777 -R .env
            sudo echo DATABASE_URL="${{secrets.DATABASE_URL}}" >> .env
            sudo echo ACCESS_SECRET="${{secrets.ACCESS_SECRET}}" >> .env
            sudo echo REFRESH_SECRET="${{secrets.REFRESH_SECRET}}" >> .env
            sudo echo TYPESENSE_HOST="${{secrets.TYPESENSE_HOST}}" >> .env
            sudo echo TYPESENSE_ADMIN_API_KEY="${{secrets.TYPESENSE_ADMIN_API_KEY}}" >> .env
            sudo echo TYPESENSE_SEARCH_API_KEY="${{secrets.TYPESENSE_SEARCH_API_KEY}}" >> .env
            sudo echo TYPESENSE_PROTOCOL="${{secrets.TYPESENSE_PROTOCOL}}" >> .env
            pm2 stop homecrescent-backend
            git checkout testing
            git fetch
            git merge
            yarn install
            yarn build
            # pm2 start yarn --name homecrescent-backend -- start
            pm2 restart homecrescent-backend
            # sudo rm -rf /etc/nginx/sites-enabled/default
            # sudo cp -r default /etc/nginx/sites-enabled/
            # sudo systemctl restart nginx